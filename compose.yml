services:
  app:
    build: .
    container_name: ${APP_CONTAINER_NAME}
    networks:
      - app-network
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      - db
    env_file:
      - .env
    environment:
      POSTGRES_HOST: ${POSTGRES_CONTAINER_NAME}
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      NODE_ENV: development
    volumes:
      - .:/usr/src/app
      - ./node_modules:/usr/src/app/node_modules
    entrypoint: >
      sh -c "npm install &&
          npm run start:dev"
    command: npm run start:dev

  db:
    image: postgres:latest
    container_name: ${POSTGRES_CONTAINER_NAME}
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - app-network
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer:latest
    container_name: ${ADMINER_CONTAINER_NAME}
    restart: always
    networks:
      - app-network
    ports:
      - '8301:8080'
    depends_on:
      - db

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
